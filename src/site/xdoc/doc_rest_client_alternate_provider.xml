<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">

	<properties>
		<title>JAX-RS &amp; Alternate HTTP Client Providers</title>
		<author email="jamesagnew@users.sourceforge.net">James Agnew</author>
	</properties>

	<body>

		<section name="JAX-RS &amp; Alternate HTTP Client Providers">

			<p>
				By default, the HAPI FHIR client uses the 
				<a href="http://hc.apache.org/httpcomponents-client-ga/">Apache HTTP Client (HC)</a>
				as it's underlying HTTP provider. HC is a very powerful and efficient provider,
				so it is generally a good choice. 
			</p>
			<p>
				It can be replaced however by providing an alternate implementation of
				<code><a href="./apidocs/ca/uhn/fhir/rest/client/IRestfulClientFactory.html">IRestfulClientFactory</a></code>
				to the <code>FhirContext</code>.
			</p>

			<subsection name="JAX-RS">
				
				<p>
					If you are using HAPI FHIR's client in an environment where other
					JAX-RS clients are being used, you may want to use the JAX-RS provider
					instead of the Apache HC provider.
				</p>
				<p>
					Using this provider is as simple as creating an instance and providing it
					to the context:
				</p>
				<macro name="snippet">
					<param name="id" value="createClient"/>
					<param name="file" value="examples/src/main/java/example/JaxRsClient.java"/>
				</macro>
				
				<p>
					Note that this provider is defined in the JAX-RS Server module, so you need
					to add the following dependency to your project in order for this to work:
				</p>
				<pre><![CDATA[<dependency>
	<groupId>ca.uhn.hapi.fhir</groupId>
	<artifactId>hapi-fhir-jaxrsserver-base</artifactId>
	<version>[version]</version>
</dependency>]]></pre>

			</subsection>
			
		</section>

	</body>

</document>
