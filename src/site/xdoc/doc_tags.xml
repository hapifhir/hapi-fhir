<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">

	<properties>
		<title>Resource Tags</title>
		<author email="jamesagnew@users.sourceforge.net">James Agnew</author>
	</properties>

	<body>

		<section name="Working With Tags">

			<p>
				FHIR defines a useful framework for adding/updating/removing 
				<a href="http://www.hl7.org/implement/standards/fhir/extras.html#tag">Tags</a>
				against resource instances. A tag is a pair of URLs (a scheme, and a term) which 
				can optionally have a textual "label" as well.
			</p>
			
			<p>
				A specific resource instance's tags can be found in the resource
				<a href="http://jamesagnew.github.io/hapi-fhir/apidocs/ca/uhn/fhir/model/api/IResource.html#getResourceMetadata()">metadata</a>
				map, using the key of 
				<a href="http://jamesagnew.github.io/hapi-fhir/apidocs/ca/uhn/fhir/model/api/ResourceMetadataKeyEnum.html#TAG_LIST">ResourceMetadataKeyEnum.TAG_LIST</a>. 
				The following example shows how to access the tags in a client
				following a "read" operation:
			</p>
			<macro name="snippet">
				<param name="id" value="getResourceTags" />
				<param name="file" value="examples/src/main/java/example/TagsExamples.java" />
			</macro>

			<subsection name="Adding Tags to a Resource">
			
				<p>
					In a server implementation, you might want to 
					add tags to a resource being returned. This is done
					by adding a TagList instance to the resource's
					metadata, as shown in the example below.
				</p>
				
				<p>
					The server will then do the "right thing" with the tags. If the method
					is for a <code>search</code> operation, the tags will be added to the category 
					element in the
					returned bundle. If the method is for a <code>read</code> operation, the
					tags will be added to the response "Category" headers.
				</p>
				<macro name="snippet">
					<param name="id" value="serverMethod" />
					<param name="file" value="examples/src/main/java/example/TagsExamples.java" />
				</macro>
				
			</subsection>
			
		</section>
		
	</body>

</document>
