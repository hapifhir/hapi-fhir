<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">

	<properties>
		<title>Download</title>
	</properties>

	<body>

		<section name="FHIR Versions">
			
			<table>
				<thead>
					<tr>
						<td><b>HAPI Structure Library</b></td>
						<td><b>HAPI Version</b></td>
						<td><b>FHIR Specification Version</b></td>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td rowspan="1">hapi-fhir-structures-dstu</td>
						<td>1.1 - 1.6.1</td>
						<td><a href="http://www.hl7.org/fhir/DSTU1/index.html">DSTU1 0.0.82</a></td>
					</tr>
					<tr>
						<td rowspan="3">hapi-fhir-structures-dstu2</td>
						<td>1.1</td>
						<td><a href="http://www.hl7.org/fhir/2015May/index.html">DSTU2 0.5.0</a></td>
					</tr>
					<tr>
						<td>1.2</td>
						<td><a href="http://hl7.org/fhir/2015Sep/index.html">DSTU2 1.0.0</a></td>
					</tr>
					<tr>
						<td>1.3 - 1.6.1</td>
						<td><a href="http://hl7.org/fhir/2015Sep/index.html">DSTU2 1.0.2</a></td>
					</tr>
					<tr>
						<td rowspan="3">hapi-fhir-structures-hl7org-dstu2</td>
						<td>1.1</td>
						<td><a href="http://hl7-fhir.github.io/">DSTU2 0.5.0 Snapshot</a> (SVN 5843)</td>
					</tr>
					<tr>
						<td>1.2</td>
						<td><a href="http://hl7.org/fhir/2015Sep/index.html">DSTU2 1.0.0</a></td>
					</tr>
					<tr>
						<td>1.3 - 1.6</td>
						<td><a href="http://hl7.org/fhir/2015Sep/index.html">DSTU2 1.0.2</a></td>
					</tr>
					<tr>
						<td rowspan="4">hapi-fhir-structures-dstu3</td>
						<td>1.4</td>
						<td><a href="http://hl7-fhir.github.io/">STU3 1.3.0 Snapshot</a> (SVN 7602)</td>
					</tr>
					<tr>
						<td>1.5</td>
						<td><a href="http://hl7-fhir.github.io/">STU3 1.4.0 Snapshot</a> (SVN 8138)</td>
					</tr>
					<tr>
						<td>1.6</td>
						<td><a href="http://hl7-fhir.github.io/">STU3 1.4.0 Snapshot</a> (SVN 8636)</td>
					</tr>
					<tr>
						<td>2.0</td>
						<td><a href="http://hl7-fhir.github.io/">STU3 1.5.0 Snapshot</a> (SVN 9395)</td>
					</tr>
				</tbody>
			</table>
		
		</section>

		<section name="Downloading HAPI FHIR">
			<p>
				If you are developing applications in Java, the easiest way to use HAPI is
				to use a build system which handles dependency management automatically. The
				two most common such systems are 
				<a href="http://maven.apache.org">Apache Maven</a> and
				<a href="https://gradle.org/">Gradle</a>. These systems will automatically
				download "dependency" libraries and add them to your classpath. 
				If you are <b>not</b> using one of these systems, you can still manually download
				the latest release of HAPI by looking in the 
				<a href="https://github.com/jamesagnew/hapi-fhir/releases">GitHub Release Section</a>.
			</p>

			<subsection name="Note on &quot;snapshot&quot; (pre-release) builds">
				<p>
					FHIR is a fast moving specification, and there is a lot of ongoing work
					in HAPI as well. While we regularly put out new releases, there may be
					times when you want to try out the latest unreleased version. You can ususally
					look at the source of the 
					<a href="https://github.com/jamesagnew/hapi-fhir/blob/master/src/changes/changes.xml">changes report</a>
					to get a sense of what has changed in the next unreleased version.
				</p>
				<p>
					See <a href="#Using_Snapshot_Builds">using snapshot builds</a> below to find out
					how to get these builds.
				</p>
			</subsection>

		</section>
		
		<section name="Maven Users">
			<p>
				To use HAPI in your application, at a minimum you need to include the HAPI-FHIR core
				JAR <code>hapi-fhir-base-[version].jar</code>, as well as at least one "structures" JAR.
				The structures JAR contains classes with the resource and datatype definitions for a given
				version of FHIR.
			</p>

			<subsection name="DSTU1 Resources - HAPI Structures">
				<p>
					HAPI supports multiple versions of the FHIR specification. Code which 
					needs to interact with or implement the DSTU1 specification (which is
					now gradually beginning to be replaced by newer specifications) can do
					so using <code>hapi-fhir-structures-dstu-[version].jar</code>.
				</p>
				<p>
					If you use Maven, you can include these JARs with the following dependency tags
					to enable DSTU1 support:
				</p>
				<source><![CDATA[<dependency>
   <groupId>ca.uhn.hapi.fhir</groupId>
   <artifactId>hapi-fhir-base</artifactId>
   <version>${hapi_stable_version}</version>
</dependency>
<dependency>
   <groupId>ca.uhn.hapi.fhir</groupId>
   <artifactId>hapi-fhir-structures-dstu</artifactId>
   <version>${hapi_stable_version}</version>
</dependency>]]></source>
			</subsection>

			<subsection name="DSTU2 Resources - HAPI Structures">
			
				<p>
					HAPI also has a <code>hapi-fhir-structures-dstu2-[version].jar</code>, which 
					contains the latest versions of the releases. You can include this JAR on
					your classpath if you want to use resources that were created or updated by
					HL7 after the DSTU1 release. Be warned though that using these resources
					<b>can lead to incompatibility</b> between your application and other applications
					if those applications are designed to be compliant with FHIR DSTU1.
				</p>
				
				<p>
					If you are using Maven, add the following dependency to include DSTU2 resources.
					Note that if you do not need to support DSTU1 resources, you do not need to 
					include the "hapi-fhir-structures-dstu" artifact.
				</p>
			<source><![CDATA[<dependency>
   <groupId>ca.uhn.hapi.fhir</groupId>
   <artifactId>hapi-fhir-structures-dstu2</artifactId>
   <version>${hapi_stable_version}</version>
</dependency>]]></source>
				
			</subsection>

			<subsection name="DSTU2 Resources - HL7.org Structures">
			
				<p>
					To use the HL7.org reference implementation structures
					(see the <a href="./doc_dstu2.html">DSTU2 page</a> for more information),
					use the following dependency.
				</p>
			<source><![CDATA[<dependency>
   <groupId>ca.uhn.hapi.fhir</groupId>
   <artifactId>hapi-fhir-structures-hl7org-dstu2</artifactId>
   <version>${hapi_stable_version}</version>
</dependency>]]></source>
				
				<p>
					If you want to use HAPI's 
					<a href="./doc_validation.html#structure_definition_validation">StructureDefinition validation</a>
					you will also need to include the <code>hapi-fhir-validation-resources-dstu2-[version].jar</code>:
				</p>
			<source><![CDATA[<dependency>
   <groupId>ca.uhn.hapi.fhir</groupId>
   <artifactId>hapi-fhir-validation-resources-dstu2</artifactId>
   <version>${hapi_stable_version}</version>
</dependency>]]></source>
				
			</subsection>
		
		</section>
		
		<section name="Gradle Users">
			<p>
				If you are using Gradle, you may use the following dependencies. Note that if
				you are doing Android development, you may want to use our 
				<a href="./doc_android.html">Android build</a> instead.
			</p>
			<p> 
				DSTU1: 
			</p>
			<source><![CDATA[compile 'ca.uhn.hapi.fhir:hapi-fhir-base:${hapi_stable_version}'
compile 'ca.uhn.hapi.fhir:hapi-fhir-structures-dstu:${hapi_stable_version}']]></source>
			<p>
				DSTU2 (HAPI):
			</p>
			<source><![CDATA[compile 'ca.uhn.hapi.fhir:hapi-fhir-base:${hapi_stable_version}'
compile 'ca.uhn.hapi.fhir:hapi-fhir-structures-dstu2:${hapi_stable_version}']]></source>
			<p>
				DSTU2 (RI):
			</p>
			<source><![CDATA[compile 'ca.uhn.hapi.fhir:hapi-fhir-base:${hapi_stable_version}'
compile 'ca.uhn.hapi.fhir:hapi-fhir-structures-hl7org-dstu2:${hapi_stable_version}'
compile 'ca.uhn.hapi.fhir:hapi-fhir-validation-resources-dstu2:${hapi_stable_version}']]></source>
		</section>

		<section name="Using Snapshot Builds">
			
			<p>
				Snapshot builds of HAPI are pre-release builds which can contain
				fixes and new features not yet released in a formal release. To use 
				snapshot builds of HAPI you may need to add a reference to the OSS snapshot
				repository to your project build file.
			</p>
			<p>
				<b>Using Maven:</b>
			</p>
			
			<source><![CDATA[<repositories>
   <repository>
      <id>oss-snapshots</id>
      <snapshots>
         <enabled>true</enabled>
      </snapshots>
      <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
   </repository>
</repositories>]]></source>

			<p>
				<b>Using Gradle:</b>
			</p>
			<source><![CDATA[repositories {
   mavenCentral()
   maven {
      url "https://oss.sonatype.org/content/repositories/snapshots"
   }
}]]></source>

		</section>

		<section name="Dependencies">
			
			<p>
				The HAPI-FHIR library depends on other libraries to provide specific functionality.
				Some of those libraries are listed here:
			</p>
			
			<subsection name="Logging (SLF4j, Logback, etc.)">
				
				<p>
					HAPI requires SLF4j for logging support, and it is recommended to include
					an underlying logging framework such as Logback. See the
					<a href="./doc_logging.html">logging documentation</a> for
					more information.
				</p>
			
			</subsection>

			<subsection name="StAX / Woodstox">
				
				<p>
					XML processing (for resource marshalling and unmarshalling) uses the
					Java StAX API, which is a fast and efficient API for XML processing.
					HAPI bundles (for release archives) and depends on (for Maven builds)
					the <a href="http://woodstox.codehaus.org/">Woodstox</a> library, which
					is a good implementation of StAX.  
				</p>
				<p>
					Upon starting up, HAPI will emit a log line indicating which StAX implementation
					is being used, e.g:
				</p>
				<source>08:01:32.044 [main] INFO  ca.uhn.fhir.util.XmlUtil - FHIR XML procesing will use StAX implementation 'Woodstox XML-processor' version '4.4.0'</source>
				<p>
					Although most testing is done using the Woodstox implementation of
					StAX, it is not required and HAPI should work correctly with any
					compliant implementation of StAX. 
				</p>
				<p>
					You can force Woodstox in an environment where multiple StAX libraries are
					present by setting the following system properties:	
				</p>				
				<source>System.setProperty("javax.xml.stream.XMLInputFactory", "com.ctc.wstx.stax.WstxInputFactory");
System.setProperty("javax.xml.stream.XMLOutputFactory", "com.ctc.wstx.stax.WstxOutputFactory");
System.setProperty("javax.xml.stream.XMLEventFactory", "com.ctc.wstx.stax.WstxEventFactory");</source>

			</subsection>
			
			<subsection name="Phloc-Schematron">
			
				<p>
					If you are using the 
					<a href="./doc_validation.html">Schematron Validatioon</a>
					module, you will also need to include the Phloc library on your 
					classpath. 
				</p>
				<p>
					If you are using Maven, this library is not added by default (it is
					marked as an optional dependency) since not all applications need Schematron
					support. As a result you will need to manually add the following 
					dependencies to your project POM.xml
				</p>			
				<source><![CDATA[<dependency>
    <groupId>com.phloc</groupId>
    <artifactId>phloc-schematron</artifactId>
    <version>${phloc_schematron_version}</version>
</dependency>
<dependency>
    <groupId>com.phloc</groupId>
    <artifactId>phloc-commons</artifactId>
    <version>${phloc_commons_version}</version>
</dependency>]]></source>

			</subsection>
			
			
		</section>

	</body>

</document>
