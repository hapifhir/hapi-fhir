<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>ca.uhn.hapi.fhir</groupId>
	<artifactId>hapi-fhir-jpaserver-example-with-custom</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<name>HAPI FHIR JPA Server - Example with Custom Resources</name>

	<repositories>
		<repository>
			<id>oss-snapshots</id>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
		</repository>
	</repositories>

	<dependencies>

		<!-- This dependency includes the core HAPI-FHIR classes -->
		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-base</artifactId>
			<version>1.0-SNAPSHOT</version>
		</dependency>

		<!-- At least one "structures" JAR must also be included -->
		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-structures-dstu2</artifactId>
			<version>1.0-SNAPSHOT</version>
		</dependency>

		<!-- This dependency includes the JPA server itself, which is packaged 
			separately from the rest of HAPI FHIR -->
		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-jpaserver-base</artifactId>
			<version>1.0-SNAPSHOT</version>
		</dependency>

		<!-- This dependency is used for the "FHIR Tester" web app overlay -->
		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-testpage-overlay</artifactId>
			<version>1.0-SNAPSHOT</version>
			<type>war</type>
			<scope>provided</scope>
		</dependency>

		<!-- HAPI-FHIR uses Logback for logging support. The logback library is 
			included automatically by Maven as a part of the hapi-fhir-base dependency, 
			but you also need to include a logging library. Logback is used here, but 
			log4j would also be fine. -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.1.2</version>
		</dependency>

		<!-- Needed for JEE/Servlet support -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>

		<!-- If you are using HAPI narrative generation, you will need to include 
			Thymeleaf as well. Otherwise the following can be omitted. -->
		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf</artifactId>
			<version>2.1.4.RELEASE</version>
		</dependency>

		<!-- Used for CORS support -->
		<dependency>
			<groupId>org.ebaysf.web</groupId>
			<artifactId>cors-filter</artifactId>
			<version>1.0.1</version>
			<exclusions>
				<exclusion>
					<artifactId>servlet-api</artifactId>
					<groupId>javax.servlet</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Spring Web is used to deploy the server to a web container. -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>4.1.6.RELEASE</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>4.1.6.RELEASE</version>
		</dependency>

		<!-- You may not need this if you are deploying to an application server 
			which provides database connection pools itself. -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-dbcp2</artifactId>
			<version>2.0.1</version>
		</dependency>

		<!-- Used to provide JSON support in non-FHIR services -->
		<!-- <dependency> <groupId>org.codehaus.jackson</groupId> <artifactId>jackson-mapper-asl</artifactId> 
			<version>1.9.13</version> </dependency> -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>2.5.2</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>2.5.2</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.5.2</version>
		</dependency>

		<!-- This example uses Derby embedded database. If you are using another 
			database such as Mysql or Oracle, you may omit the following dependencies 
			and replace them with an appropriate database client dependency for your 
			database platform. -->
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derby</artifactId>
			<version>10.11.1.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derbynet</artifactId>
			<version>10.11.1.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derbyclient</artifactId>
			<version>10.11.1.1</version>
		</dependency>

		<!-- Testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>java-hamcrest</artifactId>
			<version>2.0.0.0</version>
			<scope>test</scope>
		</dependency>
		
	</dependencies>

	<build>

		<!-- Tells Maven to name the generated WAR file as hapi-fhir-jpaserver-example.war -->
		<finalName>hapi-fhir-jpaserver-example</finalName>

		<!-- The following is not required for the application to build, but allows 
			you to test it by issuing "mvn jetty:run" from the command line. -->
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.jetty</groupId>
					<artifactId>jetty-maven-plugin</artifactId>
					<version>9.1.1.v20140108</version>
					<configuration>
						<webApp>
							<contextPath>/hapi-fhir-jpaserver-example-advanced</contextPath>
						</webApp>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<!-- Tell Maven which Java source version you want to use -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.2</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>

			<!-- The configuration here tells the WAR plugin to include the FHIR Tester 
				overlay. You can omit it if you are not using that feature. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<overlays>
						<overlay>
							<groupId>ca.uhn.hapi.fhir</groupId>
							<artifactId>hapi-fhir-testpage-overlay</artifactId>
						</overlay>
					</overlays>
				</configuration>
			</plugin>

			<!-- This plugin is just a part of the HAPI internal build process, you 
				do not need to incude it in your own projects -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>

		</plugins>
	</build>


</project>
