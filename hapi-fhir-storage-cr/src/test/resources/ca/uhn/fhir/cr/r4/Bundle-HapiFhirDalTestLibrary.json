{
	"resourceType": "Bundle",
	"id": "bundle-hapifhirdaltest",
	"type": "transaction",
	"entry": [
		{
			"fullUrl": "urn:uuid:61ebe359-bfdc-4613-8bf2-c5e300940000",
			"resource": {
				"resourceType": "Library",
				"id": "ImmunizationStatusRoutine",
				"extension": [
					{
						"url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
						"valueReference": {
							"reference": "Device/cqf-tooling"
						}
					}
				],
				"url": "http://content.smilecdr.com/fhir/dqm/Library/ImmunizationStatusRoutine",
				"version": "2.0.1",
				"name": "ImmunizationStatusRoutine",
				"title": "Library - Immunization Status for Patients Starting Immunization in Infancy",
				"status": "draft",
				"type": {
					"coding": [
						{
							"system": "http://terminology.hl7.org/CodeSystem/library-type",
							"code": "logic-library"
						}
					]
				},
				"description": "Percentage of population that is fully vaccinated based on the routine schedule of the Publicly Funded Immunization Schedules for Ontario â€“ June 2022 (Page 3)",
				"jurisdiction": [
					{
						"coding": [
							{
								"system": "urn:iso:std:iso:3166",
								"version": "4.0.1",
								"code": "US",
								"display": "United States of America"
							}
						],
						"text": "United States of America"
					}
				],
				"relatedArtifact": [
					{
						"type": "depends-on",
						"display": "FHIR model information",
						"resource": "http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1"
					},
					{
						"type": "depends-on",
						"display": "Library FHIRHelpers",
						"resource": "http://content.smilecdr.com/fhir/dqm/Library/FHIRHelpers|4.0.1"
					},
					{
						"type": "depends-on",
						"display": "Library FC",
						"resource": "http://content.smilecdr.com/fhir/dqm/Library/FHIRCommon|4.0.1"
					}
				],
				"parameter": [
					{
						"name": "Measurement Period",
						"use": "in",
						"min": 0,
						"max": "1",
						"type": "Period"
					},
					{
						"name": "Patient",
						"use": "out",
						"min": 0,
						"max": "1",
						"type": "Patient"
					},
					{
						"name": "Practitioner",
						"use": "out",
						"min": 0,
						"max": "1",
						"type": "Practitioner"
					},
					{
						"name": "Qualifying Encounters During Measurement Period",
						"use": "out",
						"min": 0,
						"max": "*",
						"type": "Encounter"
					},
					{
						"name": "Initial Population",
						"use": "out",
						"min": 0,
						"max": "1",
						"type": "boolean"
					},
					{
						"name": "Denominator",
						"use": "out",
						"min": 0,
						"max": "1",
						"type": "boolean"
					},
					{
						"name": "Numerator",
						"use": "out",
						"min": 0,
						"max": "1",
						"type": "boolean"
					}
				],
				"dataRequirement": [
					{
						"type": "Patient",
						"profile": [
							"http://hl7.org/fhir/StructureDefinition/Patient"
						]
					}
				],
				"content": [
					{
						"contentType": "text/cql",
						"data": ""
					}
				]
			},
			"request": {
				"method": "PUT",
				"url": "Library/ImmunizationStatusRoutine"
			}
		},
		{
			"resource": {
				"resourceType": "Measure",
				"id": "ImmunizationStatusRoutine",
				"url": "http://content.smilecdr.com/fhir/dqm/Measure/ImmunizationStatusRoutine",
				"name": "Children-Immunization-Status-Routine",
				"title": "Immunization Status for Patients Starting Immunization in Infancy",
				"status": "active",
				"experimental": true,
				"date": "2022-08-07T07:41:37-07:00",
				"publisher": "Smile CDR",
				"contact": [
					{
						"telecom": [
							{
								"system": "url",
								"value": "https://smilecdr.com"
							}
						]
					}
				],
				"description": "Percentage of population that is fully vaccinated based on the routine schedule of the Publicly Funded Immunization Schedules for Ontario â€“ June 2022 (Page 3)",
				"useContext": [
					{
						"code": {
							"system": "http://terminology.hl7.org/CodeSystem/usage-context-type",
							"version": "4.0.1",
							"code": "program",
							"display": "Program"
						},
						"valueCodeableConcept": {
							"text": "eligible-provider"
						}
					}
				],
				"jurisdiction": [
					{
						"coding": [
							{
								"system": "urn:iso:std:iso:3166",
								"version": "4.0.1",
								"code": "CAN",
								"display": "Canada"
							}
						]
					}
				],
				"purpose": "Efficiency and Cost Reduction.",
				"effectivePeriod": {
					"start": "2022-01-01T00:00:00-07:00",
					"end": "2022-12-31T23:59:59-07:00"
				},
				"topic": [
					{
						"coding": [
							{
								"system": "http://loinc.org",
								"code": "57024-2",
								"display": "Health Quality Measure Document"
							}
						]
					}
				],
				"library": [
					"http://content.smilecdr.com/fhir/dqm/Library/ImmunizationStatusRoutine|2.0.1"
				],
				"scoring": {
					"coding": [
						{
							"system": "http://terminology.hl7.org/CodeSystem/measure-scoring",
							"version": "4.0.1",
							"code": "proportion",
							"display": "Proportion"
						}
					]
				},
				"type": [
					{
						"coding": [
							{
								"system": "http://terminology.hl7.org/CodeSystem/measure-type",
								"version": "4.2.0",
								"code": "process",
								"display": "Process"
							}
						]
					}
				],
				"improvementNotation": {
					"coding": [
						{
							"system": "http://terminology.hl7.org/CodeSystem/measure-improvement-notation",
							"version": "0.1.0",
							"code": "increase",
							"display": "Increased score indicates improvement"
						}
					]
				},
				"group": [
					{
						"id": "group-1",
						"code": {
							"coding": [
								{
									"display": "group-1"
								}
							]
						},
						"population": [
							{
								"id": "initial-population-1",
								"code": {
									"coding": [
										{
											"system": "http://terminology.hl7.org/CodeSystem/measure-population",
											"code": "initial-population",
											"display": "Initial Population"
										}
									]
								},
								"criteria": {
									"language": "text/cql-identifier",
									"expression": "Initial Population"
								}
							},
							{
								"id": "numerator",
								"code": {
									"coding": [
										{
											"system": "http://terminology.hl7.org/CodeSystem/measure-population",
											"code": "numerator",
											"display": "Numerator"
										}
									]
								},
								"criteria": {
									"language": "text/cql-identifier",
									"expression": "Numerator"
								}
							},
							{
								"id": "denominator",
								"code": {
									"coding": [
										{
											"system": "http://terminology.hl7.org/CodeSystem/measure-population",
											"code": "denominator",
											"display": "Denominator"
										}
									]
								},
								"criteria": {
									"language": "text/cql-identifier",
									"expression": "Initial Population"
								}
							}
						]
					}
				]
			},
			"request": {
				"method": "PUT",
				"url": "Measure/ImmunizationStatusRoutine"
			}
		}
	]
}
