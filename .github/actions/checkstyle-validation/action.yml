name: 'Cross-Module Checkstyle Validation'
description: 'Runs cross-module checkstyle validation to detect duplicate error codes and other violations'

inputs:
  java-version:
    description: 'The Java version to use'
    required: false
    default: '17'
  maven-cache-key:
    description: 'The cache key for Maven dependencies'
    required: true
  hapi-cache-key:
    description: 'The cache key for HAPI dependencies'
    required: true

runs:
  using: "composite"
  steps:
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: ${{ inputs.java-version }}
        cache: 'maven'

    - name: Restore Maven Cache
      uses: ./.github/actions/caching-handler
      with:
        key: ${{ inputs.maven-cache-key }}

    - name: Restore HAPI Cache
      uses: ./.github/actions/caching-handler
      with:
        path: "$HOME/.m2/repository/ca/uhn/"
        key: ${{ inputs.hapi-cache-key }}

    - name: Debug cache contents
      shell: bash
      run: |
        echo "Checking Maven repository contents..."
        ls -la $HOME/.m2/repository/ca/uhn/hapi/fhir/ || echo "HAPI FHIR directory not found"
        ls -la $HOME/.m2/repository/ca/uhn/hapi/fhir/hapi-fhir-checkstyle/ || echo "hapi-fhir-checkstyle directory not found"
        find $HOME/.m2/repository -name "*checkstyle*" -type f || echo "No checkstyle artifacts found"

    - name: Build checkstyle module if not cached
      shell: bash
      run: |
        if [ ! -f "$HOME/.m2/repository/ca/uhn/hapi/fhir/hapi-fhir-checkstyle/8.5.0-SNAPSHOT/hapi-fhir-checkstyle-8.5.0-SNAPSHOT.jar" ]; then
          echo "hapi-fhir-checkstyle not found in cache, building it..."
          mvn clean install -pl hapi-fhir-checkstyle --batch-mode --no-transfer-progress
        else
          echo "hapi-fhir-checkstyle found in cache, skipping build"
        fi

    - name: Apply code formatting
      shell: bash
      run: |
        echo "Applying Spotless code formatting to ensure consistent formatting..."
        mvn spotless:apply --batch-mode --no-transfer-progress

    - name: Run cross-module checkstyle validation
      shell: bash
      run: |
        echo "Running cross-module checkstyle validation to detect duplicate error codes and other violations..."
        echo "This step ensures that HAPI FHIR error codes (Msg.code) are unique across all modules."
        echo "If this step fails, it means there are checkstyle violations that must be fixed before the build can proceed."
        echo ""
        mvn validate -P CHECKSTYLE --batch-mode --no-transfer-progress